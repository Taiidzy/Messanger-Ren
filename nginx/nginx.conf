# nginx.conf

events {
}

http {

        map $http_upgrade $connection_upgrade {
                default upgrade;
                ''      close;
        }

        server_tokens off; # Disable version preview on error responses

        # ssl_certificate     /etc/nginx/cert.pem;
        # ssl_certificate_key /etc/nginx/key.pem;

        # ssl_session_cache shared:SSL:10m;
        # ssl_session_timeout 10m;

        gzip on;
        gzip_disable "MSIE [1-6]\.";
        gzip_vary on; 
        gzip_min_length 1024; 
        gzip_proxied expired no-cache no-store private auth;
        gzip_comp_level 6;
        gzip_types
                application/atom+xml
                application/geo+json
                application/javascript
                application/x-javascript
                application/json
                application/ld+json
                application/manifest+json
                application/rdf+xml
                application/rss+xml
                application/xhtml+xml
                application/xml
                font/eot
                font/otf
                font/ttf
                image/svg+xml
                text/css
                text/javascript
                text/plain
                text/xml;

        ssl_protocols TLSv1.3;
        ssl_prefer_server_ciphers on;
        ssl_ciphers "ECDHE-ECDSA-AES256-GCM-SHA384:ECDHE-RSA-AES256-GCM-SHA384:ECDHE-ECDSA-CHACHA20-POLY1305:ECDHE-RSA-CHACHA20-POLY1305:ECDHE-ECDSA-AES256-SHA384:ECDHE-RSA-AES256-SHA384";

        add_header Strict-Transport-Security "max-age=3153000; includeSubDomains";
        add_header X-Frame-Options DENY always;
        add_header X-Content-Type-Options nosniff always;
        add_header X-Xss-Protection "1; mode=block" always;
        add_header X-Forwarded-Proto $scheme;

        include /etc/nginx/conf.d/*.conf;

        server {
            listen 1337;
            server_name localhost;

            location / {

                # proxy_ssl_server_name on;
                # proxy_ssl_name $host;

                proxy_http_version 1.1;
                proxy_set_header Upgrade $http_upgrade; 
                proxy_set_header Connection "upgrade";

                proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
                proxy_set_header Host $host;
                proxy_set_header X-Forwarded-Proto $scheme;

                proxy_pass http://frontend:5173/; # Proxy to frontend

            }
        }

        server {
                listen 8000;
                server_name localhost;

                location / {

                    # proxy_ssl_server_name on;
                    # proxy_ssl_name $host;

                    proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
                    proxy_set_header Host $host;
                    proxy_set_header X-Forwarded-Proto $scheme;

                    proxy_pass http://backend:8000/; # Proxy to api

                }
        }

        server {
                listen 3000;
                server_name localhost;

                location /ws/ {

                    proxy_http_version 1.1;
                    proxy_set_header Upgrade $http_upgrade; 
                    proxy_set_header Connection "upgrade";

                    # proxy_ssl_server_name on;
                    # proxy_ssl_name $host;

                    proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
                    proxy_set_header Host $host;
                    proxy_set_header X-Forwarded-Proto $scheme;

                    proxy_pass http://realtime:3000/ws/; # Proxy to api

                }
        }

}