# nginx.conf

events {
    # worker_connections 1024;
}

http {
    include /etc/nginx/mime.types;
    default_type application/octet-stream;

    map $http_upgrade $connection_upgrade {
        default upgrade;
        ''      close;
    }

    server_tokens off;

    # --- GZIP ---
    gzip on;
    gzip_disable "MSIE [1-6]\.";
    gzip_vary on;
    gzip_min_length 1024;
    gzip_proxied expired no-cache no-store private auth;
    gzip_comp_level 6;
    gzip_types
        application/atom+xml
        application/geo+json
        application/javascript
        application/x-javascript
        application/json
        application/ld+json
        application/manifest+json
        application/rdf+xml
        application/rss+xml
        application/xhtml+xml
        application/xml
        font/eot
        font/otf
        font/ttf
        image/svg+xml
        text/css
        text/javascript
        text/plain
        text/xml;

    # --- SSL ---
    ssl_protocols TLSv1.3 TLSv1.2;
    ssl_prefer_server_ciphers on;
    ssl_ciphers "ECDHE-ECDSA-AES256-GCM-SHA384:ECDHE-RSA-AES256-GCM-SHA384:ECDHE-ECDSA-CHACHA20-POLY1305:ECDHE-RSA-CHACHA20-POLY1305:ECDHE-ECDSA-AES256-SHA384:ECDHE-RSA-AES256-SHA384";
    ssl_session_cache shared:SSL:10m;
    ssl_session_timeout 1d;
    ssl_session_tickets off;

    # --- Заголовки безопасности ---
    add_header Strict-Transport-Security "max-age=31536000; includeSubDomains" always;
    add_header X-Frame-Options DENY always;
    add_header X-Content-Type-Options nosniff always;
    add_header X-Xss-Protection "1; mode=block" always;

    # --- Лог для подозрительных запросов ---
    log_format blocklog '$remote_addr - [$time_local] "$request" "$http_user_agent"';
    access_log /var/log/nginx/bad_requests.log blocklog if=$block_ua;

    # --- Фильтры безопасности ---
    map $http_user_agent $block_ua {
        default 0;
        ~*(zgrab|sqlmap|nikto|acunetix|wpscan|fimap|nessus|masscan|dirbuster|whatweb|openvas|arachni|Go-http-client) 1;
    }

    map $request_uri $hidden_file {
        default 0;
        ~^/\. 1;
    }

    # --- HTTP → HTTPS ---
    server {
        listen 80;
        listen [::]:80;
        server_name messanger-ren.ru www.messanger-ren.ru api.messanger-ren.ru ws.messanger-ren.ru;
        include /etc/nginx/blacklist.conf;

        # Логирование скрытых файлов
        access_log /var/log/nginx/bad_requests.log blocklog if=$hidden_file;

        # Блок скрытых файлов
        location ~ /\.(?!well-known) {
            deny all;
        }

        return 301 https://$host$request_uri;
    }

    # --- Frontend ---
    server {
        listen 443 ssl;
        listen [::]:443 ssl;
        server_name messanger-ren.ru www.messanger-ren.ru;
        include /etc/nginx/blacklist.conf;

        ssl_certificate /etc/letsencrypt/live/messanger-ren.ru/fullchain.pem;
        ssl_certificate_key /etc/letsencrypt/live/messanger-ren.ru/privkey.pem;

        root /usr/share/nginx/html;
        index index.html;

        access_log /var/log/nginx/bad_requests.log blocklog if=$block_ua;

        location ~ /\.(?!well-known) {
            deny all;
        }

        location ~* (\.env|/config\.php|/wp-admin|/cgi-bin|/actuator) {
            deny all;
        }

        location / {
            try_files $uri $uri/ /index.html;
        }

        location ~* \.(?:js|css|ico|png|jpg|jpeg|gif|svg|webp|woff2?|ttf|eot)$ {
            expires 7d;
            access_log off;
            try_files $uri =404;
        }
    }

    # --- API ---
    server {
        listen 443 ssl;
        listen [::]:443 ssl;
        server_name api.messanger-ren.ru;
        include /etc/nginx/blacklist.conf;

        ssl_certificate /etc/letsencrypt/live/messanger-ren.ru/fullchain.pem;
        ssl_certificate_key /etc/letsencrypt/live/messanger-ren.ru/privkey.pem;

        access_log /var/log/nginx/bad_requests.log blocklog if=$block_ua;

        location ~ /\.(?!well-known) {
            deny all;
        }

        location ~* (\.env|/config\.php|/wp-admin|/cgi-bin|/actuator) {
            deny all;
        }

        location / {
            proxy_pass http://backend:8000/;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
        }
    }

    # --- WebSocket Services ---
    server {
        listen 443 ssl;
        listen [::]:443 ssl;
        server_name ws.messanger-ren.ru;
        include /etc/nginx/blacklist.conf;

        ssl_certificate /etc/letsencrypt/live/messanger-ren.ru/fullchain.pem;
        ssl_certificate_key /etc/letsencrypt/live/messanger-ren.ru/privkey.pem;

        access_log /var/log/nginx/bad_requests.log blocklog if=$block_ua;

        # Message Service WebSocket
        location /message-service {
            proxy_pass http://message-service:3000/message-service;
            proxy_http_version 1.1;
            proxy_set_header Upgrade $http_upgrade;
            proxy_set_header Connection "upgrade";
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
            proxy_read_timeout 86400s;
        }

        # Online Service
        location /online-service {
            proxy_pass http://online-service:3101/online-service;
            proxy_http_version 1.1;
            proxy_set_header Upgrade $http_upgrade;
            proxy_set_header Connection "upgrade";
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
            proxy_read_timeout 86400s;
        }
    }
}